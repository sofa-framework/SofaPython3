name: Ubuntu CI

on: [workflow_dispatch, pull_request]

jobs:
  build:
    name: Building with SOFA ${{ matrix.sofa_branch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        sofa_branch: [master, v21.06]
    env:
      SOFA_ROOT: /opt/sofa
      SOFA_OS: Linux
      PYTHON_VERSION: 3.8
      PYBIND_VERSION: 2.4.3

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set env vars
        run: |
          echo github.event.number = ${{ github.event.number  }}
          echo github.event.pull_request.number = ${{ github.event.pull_request.number }}
          echo github.event.issue.number = ${{ github.event.issue.number }}
          if [ -n "${{ github.event.number }}" ]; then
            GIT_BRANCH="PR-${{ github.event.number }}"
          elif [ -n "${{ github.event.pull_request.number }}" ]; then
            GIT_BRANCH="PR-${{ github.event.pull_request.number }}"
          elif [ -n "${{ github.event.issue.number }}" ]; then
            GIT_BRANCH="PR-${{ github.event.issue.number }}"
          else
            GIT_BRANCH="${GITHUB_REF#refs/heads/}"
          fi
          echo "GIT_BRANCH = $GIT_BRANCH"
          if [ -z "$GIT_BRANCH" ]; then exit 1; fi
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install requirements
        run: |
          sudo apt install -qq libeigen3-dev libboost-dev libboost-system-dev libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev
          sudo apt install -qq ccache ninja-build
          python3 -m pip install numpy scipy

      - name: pybind11 cache files
        uses: actions/cache@v2
        id: pybind11_cache
        with:
          path: /tmp/pybind11
          key: pybind11_${{ env.GIT_BRANCH }}_${{ matrix.os }}_${{ hashFiles('.github/workflows/*.yml') }}

      - name: Build pybind11
        if: steps.pybind11_cache.outputs.cache-hit != 'true'
        run: |
          git clone -b v$PYBIND_VERSION --depth 1 https://github.com/pybind/pybind11.git /tmp/pybind11
          cd /tmp/pybind11
          cmake -DCMAKE_BUILD_TYPE=Release -DPYBIND11_TEST=OFF -DPYTHON_EXECUTABLE=$(which python${{ env.PYTHON_VERSION }}) .
          make --silent

      - name: Install pybind11
        run: |
          cd /tmp/pybind11
          sudo make --silent install

      - name: Download and install the latest SOFA ${{ matrix.sofa_branch }} binaries
        shell: bash
        run: |
          mkdir -p /tmp/sofa_zip
          mkdir -p /tmp/sofa_binaries
          curl --output /tmp/sofa_zip/${SOFA_OS}.zip -L \
            https://ci.inria.fr/sofa-ci-dev/job/nightly-generate-binaries/CI_BRANCH=${{ matrix.sofa_branch }},CI_SCOPE=minimal/lastSuccessfulBuild/artifact/${SOFA_OS}/*zip*/${SOFA_OS}.zip
          unzip -qq /tmp/sofa_zip/${SOFA_OS}.zip -d /tmp/sofa_zip
          unzip -qq /tmp/sofa_zip/${SOFA_OS}/SOFA_*.zip -d /tmp/sofa_binaries
          sudo mv /tmp/sofa_binaries/SOFA_* ${SOFA_ROOT}
          sudo ls -la ${SOFA_ROOT}
          rm -rf /tmp/sofa_*

      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: .ccache
          key: ccache_${{ env.GIT_BRANCH }}_${{ matrix.os }}_${{ hashFiles('.github/workflows/*.yml') }}

      - name: Build
        env:
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 6
          CCACHE_MAXSIZE: "500M"
        run: |
          echo "RUNNER_TOOL_CACHE = $RUNNER_TOOL_CACHE"
          python_root="$(find $RUNNER_TOOL_CACHE -maxdepth 3 -type d -path '**/Python/${{ env.PYTHON_VERSION }}*/x64')"
          echo "python_root = $python_root"
          export CCACHE_BASEDIR=$GITHUB_WORKSPACE
          export CCACHE_DIR=$GITHUB_WORKSPACE/.ccache
          ccache -z
          cmake \
            -GNinja \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_PREFIX_PATH=$SOFA_ROOT/lib/cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DPython_EXECUTABLE=$(which python${{ env.PYTHON_VERSION }}) \
            -DPython_ROOT=$python_root \
            .
          ninja install
          echo ${CCACHE_BASEDIR}
          ccache -s

      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: SofaPython3_${{ env.GIT_BRANCH }}_SOFA-${{ matrix.sofa_branch }}_${{ env.SOFA_OS }}
          path: install

  tests:
    name: Testing with SOFA ${{ matrix.sofa_branch }}
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        sofa_branch: [master, v21.06]
    env:
      SOFA_ROOT: /opt/sofa
      SOFA_OS: Linux

    steps:
      - name: Set env vars
        run: |
          echo github.event.number = ${{ github.event.number  }}
          echo github.event.pull_request.number = ${{ github.event.pull_request.number }}
          echo github.event.issue.number = ${{ github.event.issue.number }}
          if [ -n "${{ github.event.number }}" ]; then
            GIT_BRANCH="PR-${{ github.event.number }}"
          elif [ -n "${{ github.event.pull_request.number }}" ]; then
            GIT_BRANCH="PR-${{ github.event.pull_request.number }}"
          elif [ -n "${{ github.event.issue.number }}" ]; then
            GIT_BRANCH="PR-${{ github.event.issue.number }}"
          else
            GIT_BRANCH="${GITHUB_REF#refs/heads/}"
          fi
          echo "GIT_BRANCH = $GIT_BRANCH"
          if [ -z "$GIT_BRANCH" ]; then exit 1; fi
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install requirements
        run: |
          sudo apt install -qq libboost-all-dev
          python3 -m pip install numpy scipy

      - name: Download and install the latest SOFA ${{ matrix.sofa_branch }} binaries
        shell: bash
        run: |
          mkdir -p /tmp/sofa_zip
          mkdir -p /tmp/sofa_binaries
          curl --output /tmp/sofa_zip/${SOFA_OS}.zip -L \
            https://ci.inria.fr/sofa-ci-dev/job/nightly-generate-binaries/CI_BRANCH=${{ matrix.sofa_branch }},CI_SCOPE=minimal/lastSuccessfulBuild/artifact/${SOFA_OS}/*zip*/${SOFA_OS}.zip
          unzip -qq /tmp/sofa_zip/${SOFA_OS}.zip -d /tmp/sofa_zip
          unzip -qq /tmp/sofa_zip/${SOFA_OS}/SOFA_*.zip -d /tmp/sofa_binaries
          sudo mv /tmp/sofa_binaries/SOFA_* ${SOFA_ROOT}
          sudo ls -la ${SOFA_ROOT}
          rm -rf /tmp/sofa_*

      - name: Install SP3
        uses: actions/download-artifact@v2
        with:
          name: SofaPython3_${{ env.GIT_BRANCH }}_SOFA-${{ matrix.sofa_branch }}_${{ env.SOFA_OS }}
          path: SofaPython3

      - name: Binding.Sofa.Tests
        if: ${{ always() }}
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:$SOFA_ROOT/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          chmod +x SofaPython3/bin/Bindings.Sofa.Tests
          ./SofaPython3/bin/Bindings.Sofa.Tests
      - name: Bindings.SofaRuntime.Tests
        if: ${{ always() }}
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:$SOFA_ROOT/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          chmod +x SofaPython3/bin/Bindings.SofaRuntime.Tests
          ./SofaPython3/bin/Bindings.SofaRuntime.Tests
      - name: Bindings.SofaTypes.Tests
        if: ${{ always() }}
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:$SOFA_ROOT/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          chmod +x SofaPython3/bin/Bindings.SofaTypes.Tests
          ./SofaPython3/bin/Bindings.SofaTypes.Tests
      - name: Bindings.Modules.Tests
        if: ${{ always() }}
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:$SOFA_ROOT/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          chmod +x SofaPython3/bin/Bindings.Modules.Tests
          ./SofaPython3/bin/Bindings.Modules.Tests
