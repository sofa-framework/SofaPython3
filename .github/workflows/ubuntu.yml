name: Ubuntu CI

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  run:
    name: Running with SOFA ${{ matrix.sofa_branch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        sofa_branch: [master, v21.06]
    env:
      SOFA_ROOT: /opt/sofa
      SOFA_OS: Linux
      PYTHON_VERSION: 3.8
      PYBIND_VERSION: 2.4.3

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set env vars
        run: |
          echo github.event.number = ${{ github.event.number  }}
          echo github.event.pull_request.number = ${{ github.event.pull_request.number }}
          echo github.event.issue.number = ${{ github.event.issue.number }}
          if [ -n "${{ github.event.number }}" ]; then
            GIT_BRANCH="PR-${{ github.event.number }}"
          elif [ -n "${{ github.event.pull_request.number }}" ]; then
            GIT_BRANCH="PR-${{ github.event.pull_request.number }}"
          elif [ -n "${{ github.event.issue.number }}" ]; then
            GIT_BRANCH="PR-${{ github.event.issue.number }}"
          else
            GIT_BRANCH="${GITHUB_REF#refs/heads/}"
          fi
          echo "GIT_BRANCH = $GIT_BRANCH"
          if [ -z "$GIT_BRANCH" ]; then exit 1; fi
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - name: Setup SOFA and deps
        id: sofa-setup-action
        uses: guparan/sofa-setup-action@v0.1
        with:
          sofa_version: v20.12
          sofa_root: /opt/sofa

      - name: Set env vars
        id: set-env-vars
        shell: bash
        run: |
          echo github.event.number = ${{ github.event.number  }}
          echo github.event.pull_request.number = ${{ github.event.pull_request.number }}
          echo github.event.issue.number = ${{ github.event.issue.number }}
          echo sofa-setup-action.outputs.sofa_root = ${{ sofa-setup-action.outputs.sofa_root }}
          echo sofa-setup-action.outputs.sofa_version = ${{ sofa-setup-action.outputs.sofa_version }}
          echo sofa-setup-action.outputs.python_version = ${{ sofa-setup-action.outputs.python_version }}
          echo sofa-setup-action.outputs.pybind11_version = ${{ sofa-setup-action.outputs.pybind11_version }}

      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: .ccache
          key: ccache_${{ env.GIT_BRANCH }}_${{ matrix.os }}_${{ hashFiles('.github/workflows/*.yml') }}

      - name: Build and install
        env:
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 6
          CCACHE_MAXSIZE: "500M"
        run: |
          echo "RUNNER_TOOL_CACHE = $RUNNER_TOOL_CACHE"
          python_root="$(find $RUNNER_TOOL_CACHE -maxdepth 3 -type d -path '**/Python/${{ env.PYTHON_VERSION }}*/x64')"
          echo "python_root = $python_root"
          export CCACHE_BASEDIR=$GITHUB_WORKSPACE
          export CCACHE_DIR=$GITHUB_WORKSPACE/.ccache
          ccache -z
          cmake \
            -GNinja \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_PREFIX_PATH=$SOFA_ROOT/lib/cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DPython_EXECUTABLE=$(which python${{ env.PYTHON_VERSION }}) \
            -DPython_ROOT=$python_root \
            .
          ninja install
          echo ${CCACHE_BASEDIR}
          ccache -s

      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: SofaPython3_${{ env.GIT_BRANCH }}_SOFA-${{ matrix.sofa_branch }}_${{ env.SOFA_OS }}
          path: install

      - name: Install artifact
        uses: actions/download-artifact@v2
        with:
          name: SofaPython3_${{ env.GIT_BRANCH }}_SOFA-${{ matrix.sofa_branch }}_${{ env.SOFA_OS }}
          path: SofaPython3

      - name: Run test Binding.Sofa.Tests
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:$SOFA_ROOT/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          chmod +x SofaPython3/bin/Bindings.Sofa.Tests
          ./SofaPython3/bin/Bindings.Sofa.Tests
      - name: Run test Bindings.SofaRuntime.Tests
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:$SOFA_ROOT/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          chmod +x SofaPython3/bin/Bindings.SofaRuntime.Tests
          ./SofaPython3/bin/Bindings.SofaRuntime.Tests
      - name: Run test Bindings.SofaTypes.Tests
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:$SOFA_ROOT/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          chmod +x SofaPython3/bin/Bindings.SofaTypes.Tests
          ./SofaPython3/bin/Bindings.SofaTypes.Tests
      - name: Run test Bindings.Modules.Tests
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:$SOFA_ROOT/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          chmod +x SofaPython3/bin/Bindings.Modules.Tests
          ./SofaPython3/bin/Bindings.Modules.Tests
