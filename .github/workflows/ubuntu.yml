name: CI

on: pull_request

jobs:
  build:
    name: Building on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    env:
      TOKEN: ${{ secrets.SOFA_REPO_READ_TOKEN }}
      SOFA_ROOT: /opt/sofa

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install requirements
        run: |
          sudo apt install -qq libeigen3-dev libboost-dev libboost-system-dev libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev
          sudo apt install -qq ccache ninja-build
          python3 -m pip install numpy

      - name: Cache pybind11
        uses: actions/cache@v2
        id: pybind11_cache
        with:
          path: /tmp/pybind11
          key: pybind24

      - name: Build pybind11
        if: steps.pybind11_cache.outputs.cache-hit != 'true'
        run: git clone -b v2.4 --depth 1 https://github.com/pybind/pybind11.git /tmp/pybind11 && cd /tmp/pybind11 && cmake -DPYBIND11_TEST=OFF . && cmake -DPYBIND11_TEST=OFF . && make

      - name: Install pybind11
        run: cd /tmp/pybind11  && sudo make install

      - name: Download SOFA nightly build
        run:  |
          curl --output sofa.zip -L \
          https://ci.inria.fr/sofa-ci-dev/job/nightly-generate-binaries-v20.12/lastSuccessfulBuild/CI_SCOPE=binaries_minimal/artifact/Linux/*zip*/Linux.zip

      - name: Install SOFA nightly build
        run:  |
          sudo unzip sofa.zip -d temp
          sudo unzip temp/Linux/`ls temp/Linux/` -d temp
          sudo rm -rf temp/Linux
          sudo mkdir -p $SOFA_ROOT
          sudo mv temp/`ls temp`/* $SOFA_ROOT/
          sudo rm -rf temp

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.0
        with:
          timeZone: 8
          format: 'YYYY-MM-DD-HH-mm-ss'

      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: .ccache
          key: ${{ matrix.os }}-ccache-${{ steps.time.outputs.time }}
          restore-keys: |
            ${{ matrix.os }}-ccache-

      - name: Build
        env:
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 6
          CCACHE_MAXSIZE: "500M"
        run:
          export CCACHE_BASEDIR=$GITHUB_WORKSPACE &&
          export CCACHE_DIR=$GITHUB_WORKSPACE/.ccache &&
          ccache -z &&
          cmake
          -GNinja
          -DCMAKE_C_COMPILER_LAUNCHER=ccache
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          -DCMAKE_PREFIX_PATH=$SOFA_ROOT/lib/cmake
          .
          && ninja && ninja install
          && echo ${CCACHE_BASEDIR}
          && ccache -s

      - name: Archive production
        uses: actions/upload-artifact@v2
        with:
          name: sp3-${{ matrix.os }}
          path: install

  tests:
    name: Testing on ${{ matrix.os }}
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    env:
      TOKEN: ${{ secrets.SOFA_REPO_READ_TOKEN }}
      SOFA_ROOT: /opt/sofa

    steps:

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install requirements
        run: |
          sudo apt install -qq libboost-all-dev
          python3 -m pip install numpy

      - name: Download SOFA nightly build
        run:  |
          curl --output sofa.zip -L \
          https://ci.inria.fr/sofa-ci-dev/job/nightly-generate-binaries-v20.12/lastSuccessfulBuild/CI_SCOPE=binaries_minimal/artifact/Linux/*zip*/Linux.zip

      - name: Install SOFA nightly build
        run: |
          sudo unzip sofa.zip -d temp
          sudo unzip temp/Linux/`ls temp/Linux/` -d temp
          sudo rm -rf temp/Linux
          sudo mv temp/`ls temp` $SOFA_ROOT
          sudo rm -rf temp

      - name: Install SP3
        uses: actions/download-artifact@v2
        with:
          name: sp3-${{ matrix.os }}
          path: SofaPython3

      - name: Binding.Sofa.Tests
        if: ${{ always() }}
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:$SOFA_ROOT/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          export SOFA_PLUGIN_PATH=$SOFA_ROOT/plugins
          chmod +x SofaPython3/bin/Bindings.Sofa.Tests
          ./SofaPython3/bin/Bindings.Sofa.Tests
      - name: Bindings.SofaRuntime.Tests
        if: ${{ always() }}
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:$SOFA_ROOT/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          export SOFA_PLUGIN_PATH=$SOFA_ROOT/plugins
          chmod +x SofaPython3/bin/Bindings.SofaRuntime.Tests
          ./SofaPython3/bin/Bindings.SofaRuntime.Tests
      - name: Bindings.SofaTypes.Tests
        if: ${{ always() }}
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:$SOFA_ROOT/lib:$LD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          export SOFA_PLUGIN_PATH=$SOFA_ROOT/plugins
          chmod +x SofaPython3/bin/Bindings.SofaTypes.Tests
          ./SofaPython3/bin/Bindings.SofaTypes.Tests

