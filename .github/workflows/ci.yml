name: CI

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  run:
    name: Run on ${{ matrix.os }} with SOFA ${{ matrix.sofa_branch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
        sofa_branch: [master, v21.06]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        
      - name: Set env vars
        shell: bash
        run: |
          # Set env vars
          SOFA_ROOT=/opt/sofa
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            SOFA_ROOT='C:\dev\sofa'
          fi
          echo "SOFA_ROOT=$SOFA_ROOT" | tee -a $GITHUB_ENV

      - name: Setup SOFA and deps
        id: sofa
        uses: guparan/sofa-setup-action@master
        with:
          sofa_version: ${{ matrix.sofa_branch }}
          sofa_root: ${{ env.SOFA_ROOT }}

      - name: Print sofa-setup-action outputs
        shell: bash
        run: |
          echo 'steps.sofa.outputs = ${{ toJSON(steps.sofa.outputs) }}'

      - name: Install requirements
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get -qq install libboost-dev libboost-system-dev libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev
            sudo apt-get -qq install libeigen3-dev 
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install boost
            brew install eigen
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            cmd //c 'choco install -y --no-progress boost-msvc-14.2'
            cmd //c 'setx /M BOOST_ROOT C:\local\boost_1_74_0'
            cmd //c 'setx /M Boost_ROOT C:\local\boost_1_74_0'
            
            curl -L "https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.zip" --output "C:/eigen.zip"
            unzip -qq "C:/eigen.zip" -d "C:/eigen" && rm "C:/eigen.zip"
            ls -la "C:/eigen"
            cmd //c 'setx /M EIGEN3_ROOT C:\eigen'
            cmd //c 'setx /M Eigen3_ROOT C:\eigen'
          fi

      - name: ccache cache files
        if: ${{ runner.os != 'Windows' }}
        uses: actions/cache@v2
        with:
          path: .ccache
          key: ccache_${{ steps.sofa.outputs.run_branch }}_${{ matrix.os }}_${{ hashFiles('.github/workflows/*.yml') }}

      - name: Build and install
        env:
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 6
          CCACHE_MAXSIZE: "500M"
        shell: bash
        run: |
          ls -la "${{ steps.sofa.outputs.sofa_root }}"
          python_root="$(find $RUNNER_TOOL_CACHE -maxdepth 3 -type d -path '**/Python/${{ steps.sofa.outputs.python_version }}*/x64')"
          echo "RUNNER_TOOL_CACHE = $RUNNER_TOOL_CACHE"
          echo "python_root = $python_root"
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cmd //c "${{ steps.sofa.outputs.vs_vsdevcmd }} && \
              cmake \
                -GNinja \
                -DCMAKE_PREFIX_PATH="${{ steps.sofa.outputs.sofa_root }}\lib\cmake" \
                -DCMAKE_BUILD_TYPE=Release
                . "
          else
            export CCACHE_BASEDIR=$GITHUB_WORKSPACE
            export CCACHE_DIR=$GITHUB_WORKSPACE/.ccache
            ccache -z
            cmake \
              -GNinja \
              -DCMAKE_C_COMPILER_LAUNCHER=ccache \
              -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
              -DCMAKE_PREFIX_PATH=${{ steps.sofa.outputs.sofa_root }}/lib/cmake \
              -DCMAKE_BUILD_TYPE=Release \
              -DPython_EXECUTABLE=$(which python${{ steps.sofa.outputs.python_version }}) \
              -DPython_ROOT=$python_root \
              .
          fi
          ninja install
          #echo ${CCACHE_BASEDIR}
          #ccache -s

      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: SofaPython3_${{ steps.sofa.outputs.run_branch }}_SOFA-${{ matrix.sofa_branch }}_${{ steps.sofa.outputs.sofa_os }}
          path: install

      - name: Install artifact
        uses: actions/download-artifact@v2
        with:
          name: SofaPython3_${{ steps.sofa.outputs.run_branch }}_SOFA-${{ matrix.sofa_branch }}_${{ steps.sofa.outputs.sofa_os }}
          path: SofaPython3

      - name: Run test Binding.Sofa.Tests
        if: ${{ always() }}
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            export PATH=$GITHUB_WORKSPACE/SofaPython3/lib:$GITHUB_WORKSPACE/SofaPython3/bin:$PATH
            export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
            echo "-------------- env --------------"
            env
            echo "-------------- PATH --------------"
            cmd //c "${{ steps.sofa.outputs.vs_vsdevcmd }} && \
              echo %PATH% "
            echo "----------------------------------"
            ./SofaPython3/bin/Bindings.Sofa.Tests
          else
            export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:${{ steps.sofa.outputs.sofa_root }}/lib:$LD_LIBRARY_PATH
            export DYLD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:${{ steps.sofa.outputs.sofa_root }}/lib:$DYLD_LIBRARY_PATH
            export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
            chmod +x SofaPython3/bin/Bindings.Sofa.Tests
            ./SofaPython3/bin/Bindings.Sofa.Tests
          fi

      - name: Run test Bindings.SofaRuntime.Tests
        if: ${{ always() }}
        shell: bash
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:${{ steps.sofa.outputs.sofa_root }}/lib:$LD_LIBRARY_PATH
          export DYLD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:${{ steps.sofa.outputs.sofa_root }}/lib:$DYLD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          chmod +x SofaPython3/bin/Bindings.SofaRuntime.Tests
          ./SofaPython3/bin/Bindings.SofaRuntime.Tests

      - name: Run test Bindings.SofaTypes.Tests
        if: ${{ always() }}
        shell: bash
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:${{ steps.sofa.outputs.sofa_root }}/lib:$LD_LIBRARY_PATH
          export DYLD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:${{ steps.sofa.outputs.sofa_root }}/lib:$DYLD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          chmod +x SofaPython3/bin/Bindings.SofaTypes.Tests
          ./SofaPython3/bin/Bindings.SofaTypes.Tests

      - name: Run test Bindings.Modules.Tests
        if: ${{ always() }}
        shell: bash
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:${{ steps.sofa.outputs.sofa_root }}/lib:$LD_LIBRARY_PATH
          export DYLD_LIBRARY_PATH=$GITHUB_WORKSPACE/SofaPython3/lib:${{ steps.sofa.outputs.sofa_root }}/lib:$DYLD_LIBRARY_PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/SofaPython3/lib/python3/site-packages:$PYTHONPATH
          chmod +x SofaPython3/bin/Bindings.Modules.Tests
          ./SofaPython3/bin/Bindings.Modules.Tests
